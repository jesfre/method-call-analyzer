# Simple file name inside current diretory or full path name
entryFile.path=test-jobid.txt

# 0 for unlimited
depth.max=10000

# true/false: enables/disables the inclusion/analysis of each type of classes
allow.cargos=true
allow.collections=true
allow.daos=true
allow.interfaces=true
allow.enums=true
allow.vos=true
allow.contants=true
allow.ejbs=true
allow.servlets=true
allow.customtags=true
allow.orphanLeaves=true
# true: will override any exclusion, all classes will be included. 
# false: only allowed classes will be included.
allow.everything=false

# true: if allow.daos is true, tries to discover DAO classes from collections.
# false: do not discover.
allow.daos.discovery=true

# on/off: enables/disables the generation of the report
#report.flow.txt.switch=off
#report.flow.html.switch=off
report.summary.csv.switch=on
#report.summary.html.switch=off
report.pmd.feed.switch=off
report.single.summary.csv.switch=on
report.single.pmd.feed.switch=off
report.statistics.global.switch=on
report.statistics.individual.switch=on
# 0 for no-limit
report.maxRecordsPerFile=100000

# The output columns of the .csv file of method calls. 
# Available values: 
# FROM_MODULE,FROM_CLASS_TYPE,FROM_CLASS,FROM_METHOD_TYPE,FROM_METHOD_NAME,FROM_METHOD_DECLARATION,FROM_FILE,TO_MODULE,TO_CLASS_TYPE,TO_CLASS,TO_METHOD_NAME,TO_METHOD_DECLARATION,TO_FILE
# Additional columns are given by the pipe-separated-values from the list of entries 
# 	where the format is: "classname|methoddecl|othercolumn1|othercolumn2"
#	these values must to be declared in this list of columns in the format (1 based index): ENTRY_VAL_[1-N]:DISPLAY_NAME
output.columns=ENTRY_VAL_3:JOB_ID,FROM_CLASS_TYPE,FROM_CLASS,FROM_METHOD_TYPE,FROM_METHOD_NAME,FROM_METHOD_DECLARATION,FROM_FILE,TO_CLASS_TYPE,TO_CLASS,TO_METHOD_NAME,TO_METHOD_DECLARATION,TO_FILE,ENTRY_VAL_3:JOB_ID_X


# Packages which classes are not going to be included(nor analyzed) as part of the report
# Comma separated
packages.excluded= \
			#gov.illinois.ies.business.entities \
			#gov.illinois.fw.batch.entities \
			#gov.illinois.framework.exceptions \
			#gov.illinois.fw.business.exceptions
			#gov.illinois.fw \
			#gov.illinois.framework \

# Packages which classes should be analyzed
# Comma separated
packages.included= \
			gov.illinois \
			com. \
			gov. \
			us. \
			org. \
			dhs.
			
			
# Build the proper paths
#C:/ProjectILIES/ILIES_BATCH/IESPageElements
#########
class.root.folders= \
			C:/ProjectILIES/ILIES_BATCH/CCD \
			C:/ProjectILIES/ILIES_BATCH/FrameworkEJB \
			C:/ProjectILIES/ILIES_BATCH/SharedApp \
			C:/ProjectILIES/ILIES_BATCH/AppealsBatch \
			C:/ProjectILIES/ILIES_BATCH/AppealsEJB \
			C:/ProjectILIES/ILIES_BATCH/BenefitMgtBatch \
			C:/ProjectILIES/ILIES_BATCH/BenefitMgtBO \
			C:/ProjectILIES/ILIES_BATCH/BenefitMgtEJB \
			C:/ProjectILIES/ILIES_BATCH/CorrespondanceBatch \
			C:/ProjectILIES/ILIES_BATCH/CorrespondanceBO \
			C:/ProjectILIES/ILIES_BATCH/CorrespondanceEJB \
			C:/ProjectILIES/ILIES_BATCH/ConversionBatch \
			C:/ProjectILIES/ILIES_BATCH/ConversionBO \
			C:/ProjectILIES/ILIES_BATCH/ConversionEJB \
			C:/ProjectILIES/ILIES_BATCH/EligibilityBatch \
			C:/ProjectILIES/ILIES_BATCH/EligibilityBO \
			C:/ProjectILIES/ILIES_BATCH/EligibilityEJB \
			C:/ProjectILIES/ILIES_BATCH/FrontofficeBatch \
			C:/ProjectILIES/ILIES_BATCH/FrontofficeBO \
			C:/ProjectILIES/ILIES_BATCH/FrontofficeEJB \
			C:/ProjectILIES/ILIES_BATCH/InterfacesBO \
			C:/ProjectILIES/ILIES_BATCH/InterfacesEJB \
			C:/ProjectILIES/ILIES_BATCH/SelfServiceBatch \
			C:/ProjectILIES/ILIES_BATCH/SelfServiceBO \
			C:/ProjectILIES/ILIES_BATCH/SelfServiceEJB \
			C:/ProjectILIES/ILIES_BATCH/SupportFunctionBatch \
			C:/ProjectILIES/ILIES_BATCH/SupportFunctionBO \
			C:/ProjectILIES/ILIES_BATCH/SupportFunctionEJB \
			C:/ProjectILIES/ILIES_BATCH/WVSBatch \
			C:/ProjectILIES/ILIES_BATCH/WVSBO \
			C:/ProjectILIES/ILIES_BATCH/WVSEJB \
			C:/ProjectILIES/ILIES_BATCH/IESWeb
			

# How the indexer will index the objects (serialization based or on the fly)
# eager (To be implemented): will analyze all objects and load them to the index at the START of the indexation
# lazy: will analyze and load each object AS NEEDED to the index
indexation.mode=lazy
			
# Max number of threads  
# and timeout (in minutes) configurations
indexation.maxThreads=50
indexation.timeoutMins=60
methodGraph.maxThreads=1
methodGraph.timeoutMins=60

# true/false: true to enable creation/use of serialized method-index-entry objects
# serialized objects will be stored in the working directory
serialization.enable=false

## TESTING ##
# 0 for no-limit, >0 to perform tests
test.numberOfClasses=0