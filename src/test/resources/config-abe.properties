# Simple file name inside current diretory or full path name
entryFile.path=ABE_STARTING_POINTS-result_classes.txt

# Options: IES (default), ABE
project.name=ABE

# 0 for unlimited
depth.max=10000

# true/false: enables/disables the inclusion/analysis of each type of classes
allow.cargos=true
allow.collections=true
allow.daos=true
allow.interfaces=true
allow.enums=true
allow.vos=true
allow.contants=true
allow.ejbs=true
allow.servlets=true
allow.customtags=true
allow.orphanLeaves=true
# true: will override any exclusion, all classes will be included. 
# false: only allowed classes will be included.
allow.everything=false

# true: if allow.daos is true, tries to discover DAO classes from collections.
# false: do not discover.
allow.daos.discovery=true

# on/off: enables/disables the generation of the report
#report.flow.txt.switch=off
#report.flow.html.switch=off
report.summary.csv.switch=on
#report.summary.html.switch=off
report.pmd.feed.switch=off
report.single.summary.csv.switch=on
report.single.pmd.feed.switch=off
report.statistics.global.switch=on
report.statistics.individual.switch=on
# 0 for no-limit
report.maxRecordsPerFile=100000

# The output columns of the .csv file of method calls. 
# Available values: 
# FROM_MODULE,FROM_CLASS_TYPE,FROM_CLASS,FROM_METHOD_TYPE,FROM_METHOD_NAME,FROM_METHOD_DECLARATION,FROM_FILE,TO_MODULE,TO_CLASS_TYPE,TO_CLASS,TO_METHOD_NAME,TO_METHOD_DECLARATION,TO_FILE
output.columns=FROM_CLASS_TYPE,FROM_CLASS,FROM_METHOD_TYPE,FROM_METHOD_NAME,FROM_METHOD_DECLARATION,FROM_FILE,TO_CLASS_TYPE,TO_CLASS,TO_METHOD_NAME,TO_METHOD_DECLARATION,TO_FILE


# Packages which classes are not going to be included(nor analyzed) as part of the report
# Comma separated
packages.excluded= \
			#gov.illinois.ies.business.entities \
			#gov.illinois.fw.batch.entities \
			#gov.illinois.framework.exceptions \
			#gov.illinois.fw.business.exceptions
			#gov.illinois.fw \
			#gov.illinois.framework \

# Packages which classes should be analyzed
# Comma separated
packages.included= \
			gov.illinois \
			com. \
			gov. \
			us. \
			org. \
			dhs.
			
			
# Build the proper paths
#C:/ProjectILIES/SS_UAT2_Code/IESPageElements
#########
class.root.folders= \
			C:/ProjectILIES/SS_UAT2_Code/access \
			C:/ProjectILIES/SS_UAT2_Code/accessEJB \
			C:/ProjectILIES/SS_UAT2_Code/afbEJB \
			C:/ProjectILIES/SS_UAT2_Code/appealsEJB \
			C:/ProjectILIES/SS_UAT2_Code/appEJB \
			C:/ProjectILIES/SS_UAT2_Code/bridgesClient \
			C:/ProjectILIES/SS_UAT2_Code/commonApp \
			C:/ProjectILIES/SS_UAT2_Code/commonAppEJB \
			C:/ProjectILIES/SS_UAT2_Code/framework \
			C:/ProjectILIES/SS_UAT2_Code/ltssEJB \
			C:/ProjectILIES/SS_UAT2_Code/mobileAccess \
			C:/ProjectILIES/SS_UAT2_Code/myAccessEJB \
			C:/ProjectILIES/SS_UAT2_Code/nehnaEJB \
			C:/ProjectILIES/SS_UAT2_Code/ProviderWSClient \
			C:/ProjectILIES/SS_UAT2_Code/rmcEJB \
			C:/ProjectILIES/SS_UAT2_Code/securityEJB \
			C:/ProjectILIES/SS_UAT2_Code/servicesEJB \
			C:/ProjectILIES/SS_UAT2_Code/sharedApp \
			C:/ProjectILIES/SS_UAT2_Code/sharedAppEJB
			

# How the indexer will index the objects (serialization based or on the fly)
# eager (To be implemented): will analyze all objects and load them to the index at the START of the indexation
# lazy: will analyze and load each object AS NEEDED to the index
indexation.mode=lazy
			
# Max number of threads  
# and timeout (in minutes) configurations
indexation.maxThreads=50
indexation.timeoutMins=60
methodGraph.maxThreads=1
methodGraph.timeoutMins=60

# true/false: true to enable creation/use of serialized method-index-entry objects
# serialized objects will be stored in the working directory
serialization.enable=false

## TESTING ##
# 0 for no-limit, >0 to perform tests
test.numberOfClasses=0